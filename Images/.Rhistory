geom_line(data=topggplot2[which(topggplot2[,3] == "Donald_Trump"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[6],size=2) +
geom_line(data=topggplot2[which(topggplot2[,3] == "Logan_(film)"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[2],size=2) +
geom_line(data=topggplot2[which(topggplot2[,3] == "2017_in_film"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[4],size=2) +
scale_colour_manual(values=c("#EC1414","#BEBCBC")) +
theme_bw()+
ylab("Rankings") + xlab("Days") +
scale_y_discrete(breaks=seq(0,200,20)) +
scale_x_discrete(breaks=seq(0,30,3))
ggplot(topggplot2,aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors)) +
#geom_point(stat="identity") +
geom_line(stat="identity",colour="#BCBCBC") +
geom_line(data=topggplot2[which(topggplot2[,3] == "Donald_Trump"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[6],size=1.5) +
geom_line(data=topggplot2[which(topggplot2[,3] == "Logan_(film)"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[2],size=1.5) +
geom_line(data=topggplot2[which(topggplot2[,3] == "2017_in_film"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[4],size=1.5) +
scale_colour_manual(values=c("#EC1414","#BEBCBC")) +
theme_bw()+
ylab("Rankings") + xlab("Days") +
scale_y_discrete(breaks=seq(0,200,20)) +
scale_x_discrete(breaks=seq(0,30,3))
install.packages(c("CarletonStats", "devtools", "epanetReader", "fmsb", "ggplot2", "ggthemes",
"latticeExtra", "MASS", "PerformanceAnalytics", "psych",
"plyr", "prettyR", "plotrix", "proto", "RCurl", "reshape", "reshape2"))
install.packages(c("CarletonStats", "devtools", "epanetReader", "fmsb", "ggplot2", "ggthemes", "latticeExtra", "MASS", "PerformanceAnalytics", "psych", "plyr", "prettyR", "plotrix", "proto", "RCurl", "reshape", "reshape2"))
install.packages(c("CarletonStats", "devtools", "epanetReader", "fmsb", "ggplot2", "ggthemes", "latticeExtra", "MASS", "PerformanceAnalytics", "psych", "plyr", "prettyR", "plotrix", "proto", "RCurl", "reshape", "reshape2"))
ggplot(topggplot2,aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors)) +
#geom_point(stat="identity") +
geom_line(stat="identity",colour="#BCBCBC") +
geom_line(data=topggplot2[which(topggplot2[,3] == "Donald_Trump" | topggplot2[,3] == "Logan_(film)"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[6],size=1.5) +
#geom_line(data=topggplot2[which(topggplot2[,3] == "Logan_(film)"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[2],size=1.5) +
geom_line(data=topggplot2[which(topggplot2[,3] == "2017_in_film"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[4],size=1.5) +
scale_colour_manual(values=c("#EC1414","#BEBCBC")) +
theme_bw()+
ylab("Rankings") + xlab("Days") +
scale_y_discrete(breaks=seq(0,200,20)) +
scale_x_discrete(breaks=seq(0,30,3))
ggplot(topggplot2,aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors)) +
#geom_point(stat="identity") +
geom_line(stat="identity",colour="#BCBCBC") +
geom_line(data=topggplot2[which(topggplot2[,3] == "Donald_Trump" | topggplot2[,3] == "Logan_(film)"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[6],size=1.5) +
#geom_line(data=topggplot2[which(topggplot2[,3] == "Logan_(film)"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[2],size=1.5) +
geom_line(data=topggplot2[which(topggplot2[,3] == "2017_in_film"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[4],size=1.5) +
scale_colour_manual(values=c("#EC1414","#BEBCBC")) +
theme_bw()+
ylab("Rankings") + xlab("Days") +
scale_y_discrete(breaks=seq(0,200,20)) +
scale_x_discrete(breaks=seq(0,30,3))
library(ggplot2)
ggplot(topggplot2,aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors)) +
#geom_point(stat="identity") +
geom_line(stat="identity",colour="#BCBCBC") +
geom_line(data=topggplot2[which(topggplot2[,3] == "Donald_Trump" | topggplot2[,3] == "Logan_(film)"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[6],size=1.5) +
#geom_line(data=topggplot2[which(topggplot2[,3] == "Logan_(film)"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[2],size=1.5) +
geom_line(data=topggplot2[which(topggplot2[,3] == "2017_in_film"),],aes(x=as.numeric(as.character(Day)),y=reorder(as.numeric(as.character(Rank)),-as.numeric(as.character(Rank))),group=Name,colour=Colors),stat="identity",colour=brewer.pal(6,"Paired")[4],size=1.5) +
scale_colour_manual(values=c("#EC1414","#BEBCBC")) +
theme_bw()+
ylab("Rankings") + xlab("Days") +
scale_y_discrete(breaks=seq(0,200,20)) +
scale_x_discrete(breaks=seq(0,30,3))
install.packages('scales')
install.packages("scales")
library(ggplot2)
library(scales)
save.image("~/Desktop/Personal/May11Start.RData")
library(ggplot2)
library(ggthemes)
library(devtools)
library(RCurl)
library(plyr)
library(pageviews)
library(reshape2)
library(plyr)
library(scales)
library(lazyeval)
library(ggplot2)
library(RColorBrewer)
library(ggthemes)
library(devtools)
library(RCurl)
?plot_slopegraph
install.packages(c("CarletonStats", "devtools", "epanetReader", "fmsb", "ggplot2", "ggthemes",
"latticeExtra", "MASS", "PerformanceAnalytics", "psych",
"plyr", "prettyR", "plotrix", "proto", "RCurl", "reshape", "reshape2"))
install.packages(c("CarletonStats", "devtools", "epanetReader", "fmsb", "ggplot2", "ggthemes", "latticeExtra", "MASS", "PerformanceAnalytics", "psych", "plyr", "prettyR", "plotrix", "proto", "RCurl", "reshape", "reshape2"))
?slopegraph
library(devtools)
library(RCurl)
?slopegraph
library(epanetReader)
library(reshape)
library(RCurl)
dd <- read.csv(text = getURL("https://gist.githubusercontent.com/GeekOnAcid/da022affd36310c96cd4/raw/9c2ac2b033979fcf14a8d9b2e3e390a4bcc6f0e3/us_nr_of_crimes_1960_2014.csv"))
d <- melt(dd[,c(2:11)])
pdf("sparklines_base_epanetReader.pdf", height=6, width=10)
plotSparklineTable(d, row.var = 'variable', col.vars = 'value')
dev.off()
getwd()
dd
plotSparklineTable(d, row.var = 'variable', col.vars = 'value')
grep("Sessions",topggplot[,3])
grep("Sessions",topggplot2[,3])
topggplot2
load("~/Desktop/Coding/R/Workspaces/May11Start.RData")
load("~/Desktop/Coding/R/Workspaces/May11Start.RData")
topggplot2
grep("Sessions",topggplot2[,3])
topggplot2[grep("Sessions",topggplot2[,3]),]
d <- 10
lim <- 801
topmatrix <- matrix(nrow=1000,ncol=d)
for(i in 1:d){
topmatrix[1:length(output[[i]][,1]),i] <- output[[i]][,1]
}
colnames(topmatrix) <- 1:d
topggplot <- melt(t(topmatrix))
topggplot <- cbind(topggplot,"m")
colnames(topggplot) <- c("Day","Rank","Name","Colors")
topggplot[,4] <- "Other"
#topggplot[which(topggplot[,3] == "Arnold_Schwarzenegger"),4] <- "Arnold Schwar"
topggplot2 <- topggplot[which(topggplot[,2] < lim),]
topggplot2[order(topggplot2[,4],decreasing=TRUE),]
topggplot2[grep("Sessions",topggplot2[,3]),]
d2 <- topggplot2[which(topggplot2[,3] == "Donald_Trumpe" |
topggplot2[,3] == "Jeff_Sessions"),]
d2
which(topggplot2[,3] == "Donald_Trumpe" |
topggplot2[,3] == "Jeff_Sessions")
d2 <- topggplot2[which(topggplot2[,3] == "Donald_Trump" |
topggplot2[,3] == "Jeff_Sessions"),]
d2
d <- 30
lim <- 801
topmatrix <- matrix(nrow=1000,ncol=d)
for(i in 1:d){
topmatrix[1:length(output[[i]][,1]),i] <- output[[i]][,1]
}
colnames(topmatrix) <- 1:d
topggplot <- melt(t(topmatrix))
topggplot <- cbind(topggplot,"m")
colnames(topggplot) <- c("Day","Rank","Name","Colors")
topggplot[,4] <- "Other"
#topggplot[which(topggplot[,3] == "Arnold_Schwarzenegger"),4] <- "Arnold Schwar"
topggplot2 <- topggplot[which(topggplot[,2] < lim),]
topggplot2[order(topggplot2[,4],decreasing=TRUE),]
d2 <- topggplot2[which(topggplot2[,3] == "Donald_Trump" |
topggplot2[,3] == "Jeff_Sessions"),]
d2
test[which(test[,3] == "Donald_Trump"),]
d2[which(d2[,3] == "Donald_Trump"),]
d2[which(d2[,3] == "Donald_Trump")[order(d2[which(d2[,3] == "Donald_Trump"),1],decreasing = FALSE)],]
test1 <- d2[which(d2[,3] == "Donald_Trump")[order(d2[which(d2[,3] == "Donald_Trump"),1],decreasing = FALSE)],]
test1
test[1,1]
test1[,1]
test1 <- d2[which(d2[,3] == "Donald_Trump")[order(d2[which(d2[,3] == "Donald_Trump"),1],decreasing = FALSE)],]
test[test1[,1],1] <- d2[which(d2[,3] == "Donald_Trump")[order(d2[which(d2[,3] == "Donald_Trump"),1],decreasing = FALSE)],2]
test1
test[test1[,1],1]
test[as.vector(test1[,1]),1]
test <- matrix(1001,nrow=30,ncol=2)
as.vector(test1[,1])
test[as.vector(test1[,1]),1]
test1 <- d2[which(d2[,3] == "Donald_Trump")[order(d2[which(d2[,3] == "Donald_Trump"),1],decreasing = FALSE)],]
test[as.vector(test1[,1]),1] <- d2[which(d2[,3] == "Donald_Trump")[order(d2[which(d2[,3] == "Donald_Trump"),1],decreasing = FALSE)],2]
test
interest <- c("Donald_Trump","Jeff_Sessions")
d2 <- topggplot2[which(topggplot2[,3] == names[1] |
topggplot2[,3] == names[2]),]
test <- matrix(1001,nrow=30,ncol=2)
for(i in dim(test)[2]){
test1 <- d2[which(d2[,3] == names[i])[order(d2[which(d2[,3] == names[i]),1],decreasing = FALSE)],]
test[as.vector(test1[,1]),i] <- d2[which(d2[,3] == names[i])[order(d2[which(d2[,3] == names[i]),1],decreasing = FALSE)],2]
}
names <- c("Donald_Trump","Jeff_Sessions")
d2 <- topggplot2[which(topggplot2[,3] == names[1] |
topggplot2[,3] == names[2]),]
test <- matrix(1001,nrow=30,ncol=2)
for(i in dim(test)[2]){
test1 <- d2[which(d2[,3] == names[i])[order(d2[which(d2[,3] == names[i]),1],decreasing = FALSE)],]
test[as.vector(test1[,1]),i] <- d2[which(d2[,3] == names[i])[order(d2[which(d2[,3] == names[i]),1],decreasing = FALSE)],2]
}
test
names <- c("Donald_Trump","Jeff_Sessions")
d2 <- topggplot2[which(topggplot2[,3] == names[1] |
topggplot2[,3] == names[2]),]
test <- matrix(1001,nrow=30,ncol=2)
for(i in 1:dim(test)[2]){
test1 <- d2[which(d2[,3] == names[i])[order(d2[which(d2[,3] == names[i]),1],decreasing = FALSE)],]
test[as.vector(test1[,1]),i] <- d2[which(d2[,3] == names[i])[order(d2[which(d2[,3] == names[i]),1],decreasing = FALSE)],2]
}
test
colnames(test) <- names
rownames(test) <- 1:lim
lim
day
days
colnames(test) <- names
rownames(test) <- 1:d
test
dd <- read.csv(text = getURL("https://gist.githubusercontent.com/GeekOnAcid/da022affd36310c96cd4/raw/9c2ac2b033979fcf14a8d9b2e3e390a4bcc6f0e3/us_nr_of_crimes_1960_2014.csv"))
d <- melt(dd[,c(2:11)])
dd
d
testplot <- melt(test)
testplot
dim(d)
plotSparklineTable(testplot, row.var = 'X2', col.vars = 'X1')
d[1,]
testplot
testplot[1,]
dd[,2:11]
d[1,]
d[1:10,]
testplot[1,]
plotSparklineTable(testplot[,2:3], row.var = 'X2', col.vars = 'value')
?plotSparklineTable
testplot[,3] <- -testplot[,3]
plotSparklineTable(testplot[,2:3], row.var = 'X2', col.vars = 'value')
names <- c("Donald_Trump","Jeff_Sessions","Rex_Tillerson")
d2 <- topggplot2[which(topggplot2[,3] == names[1] |
topggplot2[,3] == names[2]),]
test <- matrix(1001,nrow=30,ncol=2)
for(i in 1:dim(test)[2]){
test1 <- d2[which(d2[,3] == names[i])[order(d2[which(d2[,3] == names[i]),1],decreasing = FALSE)],]
test[as.vector(test1[,1]),i] <- d2[which(d2[,3] == names[i])[order(d2[which(d2[,3] == names[i]),1],decreasing = FALSE)],2]
}
colnames(test) <- names
rownames(test) <- 1:d
testplot <- melt(test)
testplot[,3] <- -testplot[,3]
plotSparklineTable(testplot[,2:3], row.var = 'X2', col.vars = 'value')
names <- c("Donald_Trump","Jeff_Sessions","Rex_Tillerson")
d2 <- topggplot2[which(topggplot2[,3] == names[1] |
topggplot2[,3] == names[2]|
topggplot2[,3] == names[3]),]
test <- matrix(1001,nrow=30,ncol=3)
for(i in 1:dim(test)[2]){
test1 <- d2[which(d2[,3] == names[i])[order(d2[which(d2[,3] == names[i]),1],decreasing = FALSE)],]
test[as.vector(test1[,1]),i] <- d2[which(d2[,3] == names[i])[order(d2[which(d2[,3] == names[i]),1],decreasing = FALSE)],2]
}
colnames(test) <- names
rownames(test) <- 1:d
testplot <- melt(test)
testplot[,3] <- -testplot[,3]
plotSparklineTable(testplot[,2:3], row.var = 'X2', col.vars = 'value')
topggplot2[1,]
output[[i]][,1]
output[[1]][1,]
topmatrix[1,]
topmatrix[1:10,]
save.image("~/Desktop/Coding/R/Workspaces/May17_Wiki_Project.RData")
ggplot(data=firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank)),group=Show,color=Show)) +
geom_line(stat="identity",size=1.25) +
geom_point(stat="identity",size=2) +
scale_x_date() +
scale_y_reverse(limits = c(99,1)) +
annotation_custom(images[[1]],xmin=as.numeric(as.Date(rownames(test)[35])), xmax=as.numeric(as.Date(rownames(test)[45])),ymin=-as.numeric(30), ymax=-as.numeric(20)) +
annotation_custom(images[[2]],xmin=as.numeric(as.Date(rownames(test)[20])), xmax=as.numeric(as.Date(rownames(test)[30])),ymin=-as.numeric(50), ymax=-as.numeric(40)) +
annotation_custom(images[[3]],xmin=as.numeric(as.Date(rownames(test)[39])), xmax=as.numeric(as.Date(rownames(test)[49])),ymin=-as.numeric(50), ymax=-as.numeric(40)) +
scale_color_manual(values=brewer.pal(9,"Paired")) + theme_bw()
library(ggplot2)
library(png)
library(gridExtra)
library(grid)
library(emoGG)
library(ggplot2)
library('devtools')
library(lazyeval)
library(ggplot2)
library('devtools')
library(ggplot2)
library(png)
library(gridExtra)
library(grid)
library(emoGG)
library(lazyeval)
library(ggplot2)
library('devtools')
setwd("/Users/salianij/Desktop/Coding/Images/Podcast_Project2")
images <- vector("list",length=9)
order <- dir()[grep(".png",dir())]
for(i in 1:9){
images[[i]] <- readPNG(dir()[grep(".png",dir())[i]])
images[[i]]<- rasterGrob(images[[i]], interpolate=TRUE)
}
load("~/Desktop/Coding/R/Workspaces/5_18_Workspace_Podcasts.RData")
ggplot(data=firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank)),group=Show,color=Show)) +
geom_line(stat="identity",size=1.25) +
geom_point(stat="identity",size=2) +
scale_y_reverse(limits = c(99,1)) + scale_color_manual(values=brewer.pal(9,"Paired")) + theme_bw()
library(RColorBrewer)
ggplot(data=firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank)),group=Show,color=Show)) +
geom_line(stat="identity",size=1.25) +
geom_point(stat="identity",size=2) +
scale_y_reverse(limits = c(99,1)) + scale_color_manual(values=brewer.pal(9,"Paired")) + theme_bw()
ggplot(data=firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank)),group=Show,color=Show)) +
geom_line(stat="identity",size=1.25) +
geom_point(stat="identity",size=2) +
scale_x_date() +
scale_y_reverse(limits = c(99,1)) +
annotation_custom(images[[1]],xmin=as.numeric(as.Date(rownames(test)[35])), xmax=as.numeric(as.Date(rownames(test)[45])),ymin=-as.numeric(30), ymax=-as.numeric(20)) +
annotation_custom(images[[2]],xmin=as.numeric(as.Date(rownames(test)[20])), xmax=as.numeric(as.Date(rownames(test)[30])),ymin=-as.numeric(50), ymax=-as.numeric(40)) +
annotation_custom(images[[3]],xmin=as.numeric(as.Date(rownames(test)[39])), xmax=as.numeric(as.Date(rownames(test)[49])),ymin=-as.numeric(50), ymax=-as.numeric(40)) +
scale_color_manual(values=brewer.pal(9,"Paired")) + theme_bw()
#ggsave("/Users/salianij/Desktop/Coding/Images/Podcast_Project2/Long_Timeline_Total.pdf",width=40,height=15,units="in")
ggplot(data=firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank)),group=Show,color=Show)) +
geom_line(stat="identity",size=1.25) +
geom_point(stat="identity",size=2) +
scale_y_reverse(limits = c(99,1)) + scale_color_manual(values=brewer.pal(9,"Paired")) + theme_bw()
ggplot(data=firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank)),group=Show,color=Show)) +
geom_line(stat="identity",size=2) +
geom_point(stat="identity",size=5) +
scale_x_date() +
scale_y_reverse(limits = c(99,1))+ theme_bw()  +
theme(legend.position = c(0.15,0.4),legend.title=element_text(size=0),
legend.text = element_text(size=35),
legend.key = element_rect(size = 5),
legend.key.size = unit(3, 'lines'))+
scale_color_manual(values=brewer.pal(9,"Paired"))
rm(list=ls())
ls()
#Load and edit podcast data script
library(plyr)
library(reshape2)
##################
#Read in file
rankings <- read.csv("~/Desktop/Coding/Data/Podcast_Project2/Podcast_Rankings2.csv")
#Reduce matrix to correct dimensions
rankings <- rankings[,1:136]
#only get show names and add ranking column
showmatrix <- cbind(as.data.frame(rankings[seq(1,300,3),]),c(1:100))
#input end date in matrix
end <- "2017-05-16"
#create date columns plus ranking column
colnames(showmatrix) <- c(as.Date(as.Date("2017-01-01"):as.Date(end),origin = "1970-01-01"),"Rank")
colnames(showmatrix)[137] <- "Rank"
#eliminate numbers for each show
editedshowmatrix <- showmatrix
editedshowmatrix <- as.matrix(editedshowmatrix)
for(i in 1:9){
for(j in 1:136){
editedshowmatrix[i,j] <- substring(showmatrix[i,j],2)
}
}
for(i in 10:99){
for(j in 1:136){
editedshowmatrix[i,j] <- substring(gsub("-X\xaa","",gsub("\xd5s","",showmatrix[i,j])),3)
}
}
#create test matrix for plotting through melt function
endrank <- 20
startdate <- 90
enddate <- 136
test <- melt(editedshowmatrix[1:endrank,startdate:enddate],id.vars="Rank")
count(test[,3])[order(count(test[,3])[,2],decreasing=TRUE),]
#Works out!!
#Rank 1
endrank <- 1
startdate <- 1
enddate <- 136
test <- melt(editedshowmatrix[1:endrank,startdate:enddate],id.vars="Rank")
firstcount <- count(test[,1])[order(count(test[,1])[,2],decreasing=TRUE),]
#create matrix for each show
firstdayrank <- matrix(101,nrow=9,ncol=136)
rownames(firstdayrank) <- firstcount[,1]
colnames(firstdayrank) <- colnames(editedshowmatrix)[1:136]
for(i in 1:9){
for(j in 1:136){
if(length(which(firstcount[i,1] == editedshowmatrix[,j])) > 0){
firstdayrank[i,j] <- which(firstcount[i,1] == editedshowmatrix[,j])
}
}
}
#Input images and formatting it correctly
library(ggplot2)
library(png)
library(gridExtra)
library(grid)
library(emoGG)
library(lazyeval)
library(ggplot2)
library('devtools')
setwd("/Users/salianij/Desktop/Coding/Images/Podcast_Project2")
images <- vector("list",length=9)
order <- dir()[grep(".png",dir())]
for(i in 1:9){
images[[i]] <- readPNG(dir()[grep(".png",dir())[i]])
images[[i]]<- rasterGrob(images[[i]], interpolate=TRUE)
}
#plot that puts in the image of the podcast squares
#######################
#Load images
library(ggplot2)
library(png)
library(gridExtra)
library(grid)
library(emoGG)
library(ggplot2)
library('devtools')
#Correct overall timeline
ggplot(data=firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank)),group=Show,color=Show)) +
geom_line(stat="identity",size=2) +
geom_point(stat="identity",size=5) +
scale_x_date() +
scale_y_reverse(limits = c(99,1))+ theme_bw()  +
theme(legend.position = c(0.15,0.4),legend.title=element_text(size=0),
legend.text = element_text(size=35),
legend.key = element_rect(size = 5),
legend.key.size = unit(3, 'lines'))+
scale_color_manual(values=brewer.pal(9,"Paired"))
ggsave("/Users/salianij/Desktop/Coding/Images/Podcast_Project2/Long_Timeline_Total.pdf",width=40,height=15,units="in")
########################
#Excess
annotation_custom(images[[1]],xmin=as.numeric(as.Date(rownames(test)[35])), xmax=as.numeric(as.Date(rownames(test)[45])),ymin=-as.numeric(30), ymax=-as.numeric(20)) +
annotation_custom(images[[2]],xmin=as.numeric(as.Date(rownames(test)[23])), xmax=as.numeric(as.Date(rownames(test)[33])),ymin=-as.numeric(50), ymax=-as.numeric(40)) +
annotation_custom(images[[3]],xmin=as.numeric(as.Date(rownames(test)[38])), xmax=as.numeric(as.Date(rownames(test)[48])),ymin=-as.numeric(50), ymax=-as.numeric(40)) +
annotation_custom(images[[7]],xmin=as.numeric(as.Date(rownames(test)[126])), xmax=as.numeric(as.Date(rownames(test)[136])),ymin=-as.numeric(20), ymax=-as.numeric(10)) +
firstdayplot <- melt(firstdayrank[c(1,3,4,8,7,9,5,6,2),])
colnames(firstdayplot) <- c("Show","Days","Rank")
firstdayrank
c(1,3,4,8,7,9,5,6,2)
melt(firstdayrank[c(1,3,4,8,7,9,5,6,2),])
firstdayplot <- melt(firstdayrank[c(1,3,4,8,7,9,5,6,2),])
colnames(firstdayplot) <- c("Show","Days","Rank")
ggplot(data=firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank)),group=Show,color=Show)) +
geom_line(stat="identity",size=2) +
geom_point(stat="identity",size=5) +
scale_x_date() +
scale_y_reverse(limits = c(99,1))+ theme_bw()  +
theme(legend.position = c(0.15,0.4),legend.title=element_text(size=0),
legend.text = element_text(size=35),
legend.key = element_rect(size = 5),
legend.key.size = unit(3, 'lines'))+
scale_color_manual(values=brewer.pal(9,"Paired"))
ggsave("/Users/salianij/Desktop/Coding/Images/Podcast_Project2/Long_Timeline_Total.pdf",width=40,height=15,units="in")
#Code for 9 plots of top podcasts
xplot1 <- as.numeric(as.Date(rownames(test)[1]))-10
xplot2 <- as.numeric(as.Date(rownames(test)[51]))-10
yplot1 <- -40
yplot2 <- yplot1-50
annotation_custom(images[[1]],xmin=as.numeric(as.Date(rownames(test)[35])), xmax=as.numeric(as.Date(rownames(test)[45])),ymin=-as.numeric(30), ymax=-as.numeric(20)) +
trueorder2 <- c(1,3,4,8,7,9,5,6,2)
#Before using this, check the Timeline Top Podcast true order code
for(i in 1:9){
interest <- firstcount[trueorder2[i],1]
ggplot(firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank)),group=Show)) +
geom_line(data=firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank))),stat="identity",size=1.25,colour="#808080") +
geom_point(data=firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank))),stat="identity",size=2,colour="#808080") +
geom_line(data=firstdayplot[which(firstdayplot[,1] == interest),],
aes(x=as.Date(Days),y=as.numeric(as.character(Rank))),
size=6,colour=brewer.pal(10,"Paired")[i+1],
stat="identity") +
geom_point(data=firstdayplot[which(firstdayplot[,1] == interest),],
aes(x=as.Date(Days),y=as.numeric(as.character(Rank))),
size=6,colour=brewer.pal(10,"Paired")[i+1],
stat="identity") +
annotation_custom(images[[i]],xmin=xplot1, xmax=xplot2,ymin=yplot2, ymax=yplot1) +
scale_y_reverse(limits = c(99,1)) + theme_bw() +
ylab("Itunes Rankings") + xlab("2017") + theme(axis.title.y = element_text(size=25),axis.title.x = element_text(size=25))
ggsave(paste0("/Users/salianij/Desktop/Coding/Images/Podcast_Project2/Long_Time_Line_",interest,".pdf"),width=40,height=15,units="in")
}
trueorder2 <- c(1,3,4,8,7,9,5,6,2)
for(i in 1:9){
interest <- firstcount[trueorder2[i],1]
ggplot(firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank)),group=Show)) +
geom_line(data=firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank))),stat="identity",size=1.25,colour="#808080") +
geom_point(data=firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank))),stat="identity",size=2,colour="#808080") +
geom_line(data=firstdayplot[which(firstdayplot[,1] == interest),],
aes(x=as.Date(Days),y=as.numeric(as.character(Rank))),
size=6,colour=brewer.pal(10,"Paired")[i+1],
stat="identity") +
geom_point(data=firstdayplot[which(firstdayplot[,1] == interest),],
aes(x=as.Date(Days),y=as.numeric(as.character(Rank))),
size=6,colour=brewer.pal(10,"Paired")[i+1],
stat="identity") +
annotation_custom(images[[i]],xmin=xplot1, xmax=xplot2,ymin=yplot2, ymax=yplot1) +
scale_y_reverse(limits = c(99,1)) + theme_bw() +
ylab("Itunes Rankings") + xlab("2017") + theme(axis.title.y = element_text(size=25),axis.title.x = element_text(size=25))
ggsave(paste0("/Users/salianij/Desktop/Coding/Images/Podcast_Project2/Long_Time_Line_",interest,".pdf"),width=40,height=15,units="in")
}
order
firstcount[trueorder2[i],1]
firstcount[trueorder2,1]
order2 <- c(6,8,4,9,7,5,1,2,3)
for(i in 1:9){
images[[i]] <- readPNG(dir()[grep(".png",dir())[order2[i]]])
images[[i]]<- rasterGrob(images[[i]], interpolate=TRUE)
}
#Code for 9 plots of top podcasts
xplot1 <- as.numeric(as.Date(rownames(test)[1]))-10
xplot2 <- as.numeric(as.Date(rownames(test)[51]))-10
yplot1 <- -40
yplot2 <- yplot1-50
trueorder2 <- c(1,3,4,8,7,9,5,6,2)
#Before using this, check the Timeline Top Podcast true order code
for(i in 1:9){
interest <- firstcount[trueorder2[i],1]
ggplot(firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank)),group=Show)) +
geom_line(data=firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank))),stat="identity",size=1.25,colour="#808080") +
geom_point(data=firstdayplot,aes(x=as.Date(Days),y=as.numeric(as.character(Rank))),stat="identity",size=2,colour="#808080") +
geom_line(data=firstdayplot[which(firstdayplot[,1] == interest),],
aes(x=as.Date(Days),y=as.numeric(as.character(Rank))),
size=6,colour=brewer.pal(10,"Paired")[i+1],
stat="identity") +
geom_point(data=firstdayplot[which(firstdayplot[,1] == interest),],
aes(x=as.Date(Days),y=as.numeric(as.character(Rank))),
size=6,colour=brewer.pal(10,"Paired")[i+1],
stat="identity") +
annotation_custom(images[[i]],xmin=xplot1, xmax=xplot2,ymin=yplot2, ymax=yplot1) +
scale_y_reverse(limits = c(99,1)) + theme_bw() +
ylab("Itunes Rankings") + xlab("2017") + theme(axis.title.y = element_text(size=25),axis.title.x = element_text(size=25))
ggsave(paste0("/Users/salianij/Desktop/Coding/Images/Podcast_Project2/Long_Time_Line_",interest,".pdf"),width=40,height=15,units="in")
}
